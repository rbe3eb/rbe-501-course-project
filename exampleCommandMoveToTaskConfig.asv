function exampleCommandMoveToTaskConfig(coordinator, taskConfig, tolerance, avoidCollisions)
syms q1 q2 q3 q4 q5 q6 q7 real;
        
        
        coordinator.HomeRobotTaskConfig = trvec2tform([0.4, 0, 0.6])*axang2tform([0 1 0 pi]);

        % Current robot joint configuration
        jointInit = coordinator.CurrentRobotJConfig;
        currentRobotJConfig = wrapToPi(jointInit');
        
        % Final (desired) end-effector pose
        currP = subs(coordinator.HT{end}(1:3,4),[q1,q2,q3,q4,q5,q6,q7],currentRobotJConfig');
        currR = subs(coordinator.HT{end}(1:3,1:3),[q1,q2,q3,q4,q5,q6,q7],currentRobotJConfig');
        
        desR = (taskConfig(1:3,1:3));
        desP = taskConfig(1:3,4);
        jointFinal = IK(coordinator.HT{end},coordinator.Jv{end},coordinator.Jw{end},desP,desR,currP,currR,jointInit);
        
        qi = jointInit'; qf = jointFinal;
        dqi = zeros(7,1); dqf = zeros(7,1);
        
        ti = 0; tf = 2;
        
        [qEqn, dqEqn, ddqEqn] = jointSpaceTrajectory(coordinator.HT{end},coordinator.Jv{end},qi,dqi,qf,dqf,ti,tf);
        %% Execute the trajectory using low-fidelity simulation
        
        initState = [qi; dqi];
        
        global tme eePos gripperPos;
        tme = []; eePos = [];
        [T,X] = ode15s(@(t,x) exampleHelperTimeBasedStateInputsPickPlace(t,x,coordinator.MotionModel,qEqn,dqEqn,ddqEqn,coordinator.HT,coordinator.Jv), [ti tf], initState);
        
        gripper = gripperPos(coordinator.Tg,eePos);
        %% Visualize trajectory
        % Uncomment below to display all successful outputs
        % disp('Executing collision-free trajectory...')
        visualizePath(coordinator,gripper);
        visualizeRobot(coordinator, robotStates, trajTimes);
        
        % Deleta path on plot
        coordinator.PathHandle.Visible = 'off';

        % Update current robot configuration
        coordinator.CurrentRobotJConfig = eePos(:,end)';
        coordinator.CurrentRobotTaskConfig = getTransform(coordinator.Robot, coordinator.CurrentRobotJConfig, coordinator.RobotEndEffector); 

        % Trigger Stateflow chart Event
        coordinator.FlowChart.taskConfigReached; 
end